package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _include_buildpack_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x5d\x4f\xeb\x46\x10\x7d\x76\x7e\xc5\xc8\x44\x5c\xa8\x64\xd2\xdc\xdb\x27\x2e\x41\x05\xc2\x6d\xa3\x02\xa1\x90\x3c\x51\x14\x6d\xec\x71\xbc\x62\xb3\xeb\xee\xae\x49\x23\xca\x7f\xef\xac\xed\xf8\x83\x84\xd2\xaa\x95\x90\x88\x77\x76\x66\xce\xcc\x9c\x39\x76\x27\xc2\x50\x30\x8d\x60\x50\x60\x68\x31\x9a\xa5\xcc\x26\xdb\xa7\x92\x2d\xb1\xd3\x99\x67\x5c\x44\x29\x0b\x9f\x82\xfc\xd7\xc1\x21\xbc\x74\xbc\xcd\xdd\x08\x4d\x38\xf0\xcf\x9d\x01\x98\x04\x96\xa6\x82\x87\xcc\x72\x25\x21\x33\x5c\x2e\x80\x4b\x63\x99\x10\x18\x41\x15\xc7\xf8\x1d\x0f\xa5\xc9\x34\x06\x2e\xaf\xe9\x78\x75\x0a\x83\x36\x4b\xe1\x14\x7a\x11\x3e\xf7\x64\x26\x44\xdb\xe8\x80\xc1\x9f\x14\x34\x42\x69\x9b\xa6\x50\x2d\x53\x2e\xb0\x61\x4b\xb5\x0a\x63\x3a\x0a\xec\x3a\x45\x53\x1b\x5e\x9b\x15\x95\xe8\x76\xd5\x34\x2a\x4c\x35\x6c\x88\xb5\x5a\xc2\x4f\xdc\xc2\xf4\xee\x8a\x8a\x8d\x40\xa5\xae\x50\x26\x80\xb2\x2f\xb9\xb5\xdc\x24\x7e\x1d\x26\xd3\x62\xe0\x77\xfb\x7e\x69\xa5\xdf\x9f\x7d\x70\x2d\xa5\x5f\x2f\x5f\x8e\x83\xee\xc1\x9c\x19\x74\x07\xd0\xed\x1f\xbe\x6e\x35\x45\xa8\x90\x42\x5b\xa6\x17\x68\xf3\x01\x91\x5f\x05\x26\x3f\xe8\x75\x9d\x37\x39\xf2\x18\x1e\x1e\x20\x90\xe0\x77\x8b\x64\x3e\x3c\x3e\x7e\x05\x9b\xa0\xec\x78\xde\x82\x20\x87\x42\x49\x24\x33\x81\xf2\xe9\x5f\x23\x2a\xb9\x7b\x61\xb4\x7d\x96\x7b\x25\x18\x3e\xa9\xcc\x42\x10\xfc\x9e\x71\xb4\x75\xfc\xc2\x29\x68\x4f\x0a\x85\xc1\x56\xbe\x20\x88\x30\x25\xe0\xfd\xf7\x32\xc7\xbc\xe3\xe9\x25\x04\x3a\x6e\x9b\x7a\x47\x0b\x97\xa4\x35\x2b\xc1\x8d\xdd\x35\xa8\x2b\x3a\x7f\x8f\x66\xc2\x40\xe0\x92\xb7\xfb\xf6\x26\x70\xce\xb9\x22\xf2\x1e\x9c\x57\xe3\xc6\x3f\x52\x62\x5b\xce\x65\x9a\x06\x3d\x29\x6d\xe1\xec\xf6\x76\x36\x1c\xdd\xd1\x28\x88\xea\x9b\x2a\x4a\xdb\xcf\xe3\xeb\xcb\x9d\x86\xbb\xcb\x5f\xa7\x97\xf7\x93\xd9\x68\x38\xf0\xf3\xb4\x41\xf7\xee\xec\x66\x38\xbe\xae\xaf\xdc\x4f\xce\x2e\x7e\x19\xf8\x21\x46\x4c\x07\xfd\x1f\xc8\x10\xa6\xd4\x16\xa8\xc3\xf5\x8e\xfc\x4d\x21\x9b\xf0\x0e\xef\x50\xab\x34\xa5\xb2\x53\xcd\x9f\x89\xed\x0b\x24\xac\x99\x41\xbd\x54\x34\x9e\x20\x51\x8e\x5d\x0e\x18\x48\x35\x57\xd1\x9a\xe2\x26\x6a\x25\x21\xb8\x2b\x0f\x8e\xa5\x5a\x68\x45\x3b\xf7\x1b\x4d\xae\x01\xbe\x7c\x6e\xe4\x2b\x4f\x42\x46\xac\x28\x11\x38\x00\x53\x83\x71\x26\x48\x34\x88\xff\x72\x61\xa0\x07\x31\x32\x4b\x3c\xae\x9b\x76\x41\x0b\x33\xbb\x18\xdf\xdc\x5c\x5e\x4c\x66\x93\xd1\xf5\xe5\x78\x3a\x19\xf8\x5f\xbe\x2f\x02\xe4\x1d\x37\x16\x53\x98\x53\xdb\x57\x4c\x47\xc6\xad\x0c\x65\xe0\x73\x2e\xb8\x5d\x57\xfc\x8e\x5b\xed\x40\xf9\xdc\xa2\xb9\x51\x99\x0e\x71\xeb\x4a\x4e\xb2\x37\xf3\x76\x32\x52\x0c\xbc\xb1\x39\xe7\xd3\xd1\xd5\xf0\x96\xc6\x30\x23\xb8\xad\xc8\x96\x5b\x92\x16\xff\x1b\xda\x30\x71\x9a\x16\x66\xc6\x92\x14\x54\x11\xdd\x36\x38\x00\x4d\x35\xdd\x5e\xd6\xc2\xcb\xdd\xad\x18\xdf\xf2\x70\xdd\xf0\x46\xdf\xee\x07\x9f\xf6\x3e\x81\x46\x16\x39\x05\x29\xc5\x03\x4e\x4e\x4e\xb6\x20\xd2\xf5\x2d\x25\xab\x17\x6d\x23\x04\x25\xd8\xfd\xe6\xa6\x36\xc1\x96\x8a\x74\x90\xc9\x8a\x42\x11\xb4\x91\xf5\xe6\x5c\x92\xb3\x75\xe2\xdb\x60\xc4\xa1\x5f\xad\xfc\x1e\xc4\xca\x35\x3f\x41\xad\x9e\xb2\xa0\x86\xb5\xcc\x84\xe5\x60\x15\x94\xee\x31\xd7\x6e\x5b\x63\xda\x2e\x5a\x5b\xa2\x88\x9b\x00\x6d\xe9\x56\xb7\x76\x47\xf2\x9b\x82\x03\x9f\x4f\xf7\xfb\xd5\x90\x3e\xaa\xe8\x1f\xc5\x7f\xb7\xd2\x9c\xfc\x9e\xb7\xbf\x0f\x1f\x4c\xf9\x3d\xdc\x95\xbf\x26\xb5\xd1\x0e\xb0\xd3\xbe\x52\xe4\x6b\xcd\x1a\x1c\xbc\x0d\xf8\xdd\xa1\xbb\xab\x74\xe3\x45\xc4\x1d\x5d\x5f\x6a\xa7\x87\x1f\x1f\x5f\xfd\xaf\x10\xa9\x7f\xd3\x86\xff\x52\x6a\xe3\xce\x9c\x98\xfa\x44\x0f\x11\xe9\x7d\xa1\xe7\x8d\x95\x6a\xf3\x7b\xc7\x4a\x75\x5b\x68\xdd\xe7\x43\x49\x14\x8c\x6a\x72\x95\x77\xa7\x92\xcd\xe9\x3f\x71\xa9\xfc\x0e\x60\xed\x0d\x24\x46\x59\xe8\x6f\xaf\x7b\xf9\x69\xb0\x11\xf8\xc9\x78\x38\x3e\x06\x8b\x05\x0d\x6d\xc2\x0d\xd0\x9f\xc4\x10\x8d\x61\x7a\x0d\xd4\x69\x3a\x5f\x21\x84\xee\x7b\x46\xac\xd8\xda\x40\xca\x8c\x81\x2e\xa9\x49\x5e\x08\xac\xb8\x4d\xdc\x5b\x91\x1b\x93\xe1\xa6\x60\xea\xb4\x7b\xdb\x9c\xd5\xf7\x0e\x5b\x15\xb7\xc6\xe0\xef\x58\xb0\x12\xe7\x1b\x95\x87\x96\xe2\xd2\xd3\x26\x7a\xdd\x9f\xff\x25\x72\x31\xbb\x0f\x43\x69\x3a\xa1\xaf\x96\xbf\x07\x79\xda\xb2\xf6\x8e\x36\x4e\x9d\xd7\xbf\x02\x00\x00\xff\xff\xb5\x68\xc3\xfa\x7a\x0a\x00\x00")

func include_buildpack_bash() ([]byte, error) {
	return bindata_read(
		_include_buildpack_bash,
		"include/buildpack.bash",
	)
}

var _include_buildpacks_txt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x91\x31\x72\xc3\x20\x10\x45\x7b\x9f\x42\x17\x70\x14\x81\x22\x9c\xdc\x66\xd9\x5d\x19\x64\x6c\x18\x04\xcc\xf8\xf6\x69\x3c\x12\xed\xfe\x86\xea\xbd\xcf\x07\x57\x4a\xda\xff\xc6\xf1\xee\x8b\xab\xf6\x0b\xe3\x73\x74\x9c\xe3\xa3\x7e\x8e\xab\xad\x3e\x50\x02\x7c\x5c\x31\xc4\xad\x66\x1e\x3e\xb1\xa8\xec\x4a\xb7\x8b\xc0\x70\x8f\x43\x1f\xab\x96\x09\xc0\x8a\x0c\x19\x28\x1c\x57\x18\xcc\xac\x57\xa3\x51\x68\xf0\x61\x3f\x0c\x13\xaf\xbf\xca\x90\xc4\xb0\x41\x83\x6e\x45\x53\xa2\x37\x78\xd6\x50\xfc\x49\x23\x11\xa3\x9e\x25\x86\x57\x24\xde\xce\x05\x6d\xf9\x96\xd0\xc9\xa5\xfe\x0f\xda\xac\x45\x74\x80\x77\x47\x23\x33\xf1\x6d\x11\x19\xde\xc5\xc5\xd7\xd9\xff\xa3\x24\x74\xae\xb6\xef\x6f\x93\x32\x12\x7c\x47\x08\xd0\x8f\x9f\x2e\xff\x01\x00\x00\xff\xff\x89\x19\x21\xa5\x01\x03\x00\x00")

func include_buildpacks_txt() ([]byte, error) {
	return bindata_read(
		_include_buildpacks_txt,
		"include/buildpacks.txt",
	)
}

var _include_cmd_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x41\x6f\x9c\x3c\x10\x3d\xc3\xaf\x98\xcf\x71\xa2\xe4\x80\xf8\x58\xf5\x44\xb4\x55\xa2\xb6\xb7\xb6\x97\x1c\xc3\x46\x72\xc0\x04\x14\xaf\x59\x61\xd8\xa6\x22\xfc\xf7\xce\x18\x9b\x40\xb2\xbd\xf4\x04\x9e\x19\xcf\x7b\xf3\xfc\xec\xb0\x90\xb9\x12\xad\x84\xe8\x16\xbe\xfc\xf8\x7a\x17\x86\xf9\xbe\x88\x54\x6d\xba\xcb\x2b\x18\xc2\xc0\xa7\x0b\x69\xf2\x2d\xfb\x8e\x71\x03\xe2\x28\x6a\x25\x1e\x95\x84\xbc\xd9\xef\x85\x2e\x0c\x7b\x2b\xd4\x66\xcb\x78\x82\x01\xdf\x27\x7a\x96\xbf\x0d\x30\xae\x0d\x83\x57\x30\xb2\x00\x66\x62\x5c\xa5\x71\xcc\xc2\xf1\x0d\xcf\xd6\xad\x41\xe7\x5e\x65\xd3\xc2\x33\xd4\x1a\xdb\x0c\xff\x11\xcd\xfb\x9b\xdd\xc8\xae\xa1\x68\xc2\x20\x90\x79\xd5\x60\xe2\x99\x48\x34\x5a\x22\xc8\x53\x2b\x0f\xc0\x1e\x08\xc4\x62\x36\x6d\xb7\x42\xd2\x0e\xe7\x5f\xda\x46\x47\x48\xdf\xf5\x94\x2f\x07\x5c\x9d\xd2\xeb\x9b\xcd\xa0\x62\x50\xf6\x3a\xef\xea\x46\x83\xa0\x95\xd3\x6d\x21\x5b\xa9\xed\xa8\x98\xc6\xef\xb0\x49\x23\x9e\x8c\x98\x56\x4d\x2e\x94\xd5\xc1\xa9\xa0\x89\x2e\xbf\x5c\x8c\x72\xb5\xe6\x5b\x6a\xb6\x54\x20\x62\x70\xf1\x19\xe2\x42\x1e\x63\xdd\x2b\x05\x17\x17\x93\xaa\xda\x8d\x15\x06\x76\x6e\x3a\x9e\x94\x0f\xc2\xc4\x67\xf8\x17\xc5\x23\xdb\x6d\x6d\xaf\xf5\x8c\xb3\x72\xef\x4e\xc8\x8d\xcb\x37\xd8\x55\x1e\x91\x31\x06\xa9\x10\x90\xd7\x4a\x91\x8c\x71\xfa\x66\x58\x67\x0d\xa2\x0d\xf0\x04\x32\x96\xf1\x9b\x0c\x85\x0f\x83\xd1\x39\x67\xc2\x83\xe9\xf8\x1d\xc5\xc4\x92\x4a\x66\x4e\x9e\xcc\x9b\x48\x98\xbc\x06\x53\xd5\x65\x07\x3e\x8c\x85\xab\xf8\xeb\x2b\x74\x6d\x2f\x7d\xda\x74\xa2\xeb\xcd\xf6\xff\x30\xa8\x4b\xf0\xaa\xce\x6e\xb5\x32\x3e\x70\x8c\x67\x7c\xa5\xe3\x35\x74\x95\xd4\x38\x04\x1f\x16\xfa\x61\x1d\xdb\x8d\xb8\xfb\x86\x74\x50\x06\x51\xa8\xed\xfd\x3d\x86\x28\x07\xbb\xdd\xbc\xd1\x9d\xd7\xcf\x06\x4c\x9f\x57\xde\x11\x29\xd8\x42\xca\x3b\x66\x1b\x3a\x5a\xe5\xbb\x10\xad\x8f\x4d\xf8\x65\xa9\x23\xd2\x75\xaa\xb8\xa2\xfd\x65\xed\x3c\x31\x5b\xe3\xf6\xc3\xb5\x4d\x6d\x21\xba\x0a\x31\xd7\xbe\x72\x8d\x9c\xb5\x82\x43\x5b\xeb\xae\x04\x06\x70\x1e\x6d\x3e\x19\x38\x37\x19\xda\xcc\x0d\xb5\x82\xff\x28\xc7\x44\xc7\xc2\x98\xfe\xf1\x14\x12\xd5\xcd\x50\x0b\xac\xf7\x68\xd3\xf6\xbf\x00\x62\x26\xf5\x15\x33\xe8\xe4\x70\xff\xf1\x6a\xbc\xd4\x1d\xf0\x49\xde\x90\x74\x72\x76\xaa\xa4\x3a\x9c\xba\xc4\x77\x55\xf3\xcb\x00\x65\x91\x39\x8e\xb1\x17\xf6\x22\xd3\x40\xa7\x6e\xb2\x68\x9f\xc8\x89\x64\x01\x7f\x6a\x14\x5a\x9c\x1b\x4d\xe6\x65\xa7\xb1\xad\x21\xe9\x07\x5f\x99\x33\x50\x02\x45\xc1\x1d\x53\xd9\xc2\xdb\x03\xb5\x89\xcf\x69\xd2\x98\x5e\xa9\x29\xa8\x31\x04\xeb\x35\xc4\x11\x5e\xa3\xc5\x76\xfb\xb8\x9c\x38\x19\xc7\x44\x47\x34\x97\x7b\x3b\x92\xd9\xb9\xee\x7e\xda\x97\x87\x44\x5a\x5c\x4b\x2f\x97\x55\x25\xfc\x13\x00\x00\xff\xff\xd3\x23\x50\x2b\x44\x06\x00\x00")

func include_cmd_bash() ([]byte, error) {
	return bindata_read(
		_include_cmd_bash,
		"include/cmd.bash",
	)
}

var _include_fn_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x51\x41\x6e\xc2\x30\x10\x3c\xc7\xaf\x18\xad\x22\x01\xaa\xa2\x08\xae\x34\x3d\x56\xea\x1b\x28\x07\xcb\xac\x89\xd5\xd4\x89\x6c\x03\xaa\x28\x7f\xef\x1a\xd2\x92\x43\x55\x55\xb9\x64\x77\x66\x67\x76\xd6\xca\xfa\x4a\x87\x7d\x9c\x2f\x70\x56\xc5\x8e\x4d\xa7\x03\x63\xc7\xd1\x34\xf4\xe2\xe3\xc0\x26\x41\xc3\x1e\xbc\x49\xae\xf7\xb3\x08\x21\x1f\xde\xd9\xa7\x48\xaa\xe8\x7a\xa3\xbb\xdc\xe9\x9c\xe7\xa6\x9c\xa7\x8f\x81\x51\x2e\xf1\x89\x7d\xe0\x01\xdf\x6a\x63\x59\x1d\x41\x53\x03\x12\xa0\x65\xbd\x43\xb5\x5c\xa8\x82\x4d\xdb\xa3\x62\x50\x79\x1e\x05\xeb\x1a\x35\xbd\x7a\xba\x64\xa2\x3e\xbd\xa1\x7a\x6e\x30\xab\x9b\xfa\x3c\x04\xe7\x13\xe8\x91\xca\x25\x3d\xd1\x65\x26\x78\x0a\xc8\x5c\xc8\xa7\x2e\x2a\xa7\xca\x16\xff\x4e\x95\xa1\xe0\x86\x5c\x51\x1e\xc8\x44\xf9\xe1\xa3\xe4\xa3\x5f\x82\x45\x33\x59\x9e\xd6\xb8\x6e\x5f\xe6\xfe\xe8\xee\xbc\xed\xff\x70\x8f\x13\x7b\xba\x73\xac\x6f\x72\x26\xc4\xb6\x3f\xc5\xfe\x10\x0c\x4b\xbd\xa2\xf1\x3a\x54\x5a\x8f\x72\x3e\xbe\x18\xa4\x5a\xfc\x40\xb8\x01\xd7\xcd\x26\x80\x2a\x9c\xc5\x66\x23\xa3\x77\x49\xc2\x76\xbb\x46\x6a\xd9\xab\xa2\xb8\x25\x13\x5d\x39\xa1\x76\x1d\x2a\x8f\x87\x95\xf4\x6f\xc3\xd6\x49\x9c\xaf\x00\x00\x00\xff\xff\x5c\xaf\x12\xe0\x23\x02\x00\x00")

func include_fn_bash() ([]byte, error) {
	return bindata_read(
		_include_fn_bash,
		"include/fn.bash",
	)
}

var _include_herokuish_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x55\xef\x6f\xdb\x36\x10\xfd\x2c\xfd\x15\x57\xce\xa9\xd7\x00\x8a\xb1\xac\xd8\x87\x04\x1a\xea\x64\xee\x52\xac\x4b\x8d\xa6\xed\x30\x24\x85\xc1\x88\x67\x99\x08\x45\x0a\x24\x95\x3a\xc8\xf2\xbf\xef\xa8\x5f\x96\xed\xc4\x9f\xc4\x7b\xef\x8e\xc7\xc7\xc7\x73\x2c\x97\x70\x7d\x0d\x6c\x74\x36\xbd\xba\x58\x7c\x9b\x7d\xbe\xfa\x70\xf9\xfe\x13\x83\x44\x79\x60\x6f\x19\x7c\xff\x7e\x0a\x7e\x85\x3a\x8e\x30\x5b\x19\x60\xaf\x5e\xc1\xbf\xa6\xb2\xe0\x1e\x9c\xc7\x02\xce\xb8\x5b\x81\x74\x60\x2a\x0f\x66\x09\x82\x7b\x3c\x81\x41\xad\x4f\x97\x6c\x90\x39\x57\xc8\x1d\x42\x55\xe6\x96\x0b\x04\x6f\x9a\xfc\xb7\x60\x2c\xe4\x16\x29\xd9\x1e\x05\xfe\x5a\x7a\x38\x8e\x97\x32\x8e\x29\x28\x8c\x56\x0f\xc0\xcb\x72\x51\x72\xbf\x4a\xd9\xe8\x71\x3a\x9f\x2f\xe6\xd3\x2f\x17\x27\xc9\x84\xc2\x4f\x6c\xc3\x42\x7d\xdf\xb3\x66\x97\xdf\x3a\x96\x2f\xca\x09\x41\x43\xe6\x6d\x25\x95\xe8\xb9\x67\x5f\x3f\x7c\xfc\x63\xc8\xae\xe1\x21\x3f\xe3\xd9\x0a\x7b\xfe\xf9\xf4\xfc\x62\x36\xe4\xd7\xf0\x5e\xfd\x92\x67\x77\xdb\x7b\xcc\xa7\xe7\x7f\xed\xed\x13\x68\x8e\x92\x07\xbb\xa1\xe0\x56\xba\xd5\xe2\x1e\xad\x93\x46\xa7\xec\xfe\x98\x70\x81\x99\xe2\x96\x04\xd4\xa5\x95\xf7\x52\x61\x8e\x62\x51\x39\xb4\x29\xd3\xe6\xd6\x88\x07\xf6\x3c\x25\xb7\xa6\x2a\x03\xa7\xfe\xa0\x42\xa8\x5d\x65\x31\x09\xad\xb9\x9f\xdf\xc0\x63\x1c\x15\x77\x42\x5a\x48\x4a\xb8\x89\xa3\x88\x8d\x3a\xb9\x59\xbb\xee\x84\xed\xd6\x1b\xf9\xba\xc8\x46\xa0\x2d\x4e\x2f\x01\x8b\x9f\xe2\x78\xb0\x61\xd7\xa8\x40\x97\xa5\xec\x6a\x65\x7e\x38\x08\x30\x38\xf4\x5e\xea\xdc\x91\x11\xe8\x08\xda\x2f\x81\x1d\x24\xbf\x1e\x3b\xf8\x09\x0e\xdc\x8d\x6e\xab\x77\x1e\x48\x07\xad\x86\x70\x59\x2a\x99\x71\x4f\x9a\x35\xd5\x44\x45\x35\x72\xb0\x95\xf6\xb2\xc0\x36\xb9\xb3\x46\x3a\x38\x17\x85\xe7\x21\x81\x4c\xb9\x24\xd9\x1c\x2c\xc9\x94\x02\x97\x52\x87\xfc\xdb\xe0\x5b\x22\x4b\x6b\x74\x81\xda\xb7\x85\x36\xbe\x49\xb7\x24\x89\xd8\x3f\xc6\xde\x85\x44\x52\x15\x33\x6f\xec\x43\xd7\x49\x4d\x73\x6d\xfe\xc6\x47\xe9\x96\x80\x54\xb9\x13\xaf\x71\x1e\x28\xd3\x9c\x6a\xb8\x71\x6f\xa6\x74\x57\x6b\xe8\xcf\x22\xb5\xf3\x5c\x29\x14\x1b\x47\xba\xfa\x2a\x5a\x67\xbd\x74\x19\xd0\xe2\xc0\xb5\x00\x57\x95\xa5\xb1\x9e\x8a\x74\x51\xa9\x97\xa6\x7f\xd9\x2b\xb4\xe6\xae\x22\xbb\x76\x30\x8d\x80\xc7\xf6\xf9\x9f\x24\x02\xc3\xc3\x6b\xa9\x99\x29\xa8\x41\x79\xab\xb0\xf7\x38\x91\x77\xed\xfe\x1c\x7d\xd3\xfe\x09\xc1\xdc\x91\x4d\x12\x92\x84\x3a\xc9\x54\x25\x70\xf0\x92\x8e\xfc\xda\xc3\x7f\xe4\x23\x01\x63\x37\x39\x3a\x6c\xda\xbb\x99\x4c\x26\x63\x0a\xaf\xb9\xcd\xc9\x69\xad\xb3\x00\x0e\x92\xe3\xdf\x5c\xe3\xac\x20\x8b\x97\x5e\x61\x23\x4a\xdd\xc2\x68\x7c\x83\xd7\xbf\xfc\x99\x84\xdf\xef\x63\x18\x1d\x06\x92\xd4\x82\x3c\xd0\xb0\x7e\xac\xc8\x2d\x10\x5e\x2e\x28\xa9\xf1\x14\x84\xa1\x0b\xea\xa6\x6a\x08\x31\x48\x53\x48\x92\xc3\xc1\x2c\x8d\xb6\x8a\x8f\x6b\x1a\x45\x51\x39\xdc\x05\xa1\xfe\x8d\xbb\x5a\x04\xd3\x5c\x8c\x68\x4c\x60\xe8\x64\xf8\xcc\x9b\x7e\x48\x97\x4a\x8a\x5c\x0a\xca\xd8\x9b\x13\x0c\x46\xef\x42\x5a\xc1\xa5\xee\xe9\x90\xa0\x81\x52\x96\xb8\xe4\x52\x9d\x36\x7d\x7f\xf9\x3c\x3d\x9f\x85\xe9\x0f\xaf\x5f\x43\xcd\x59\xc7\x71\x94\x15\x22\xc1\x75\xb0\x42\xfd\xb8\xdc\x56\xa4\xbd\xbb\x2d\x5a\xa2\xdd\xe6\xe2\x80\x7d\xa5\x47\x14\xfc\xd4\x9a\x72\xcb\x92\xc3\x52\x7d\x3c\xa9\xbf\x5e\xc0\xda\x2a\x2f\xa0\x4a\x3a\xbf\xd7\x8b\x53\x55\x0e\xec\x6f\xae\x79\x8e\xe1\x2f\xa5\x9f\x15\x01\xd8\x69\x22\x84\x12\x59\x84\xef\xfd\x78\x8e\x1a\x2d\xfd\x5f\xed\x23\xcd\xf7\xde\xce\xa5\x35\x59\x98\x2b\x8d\x08\xf3\x76\xe5\x6a\x39\x68\x38\x85\x66\x80\xdc\x5e\xd0\x7a\xa7\x8f\x2e\x33\xa1\xd3\xee\xb4\xd2\x43\xb8\xc6\xec\x79\xa4\xe4\x36\x78\x8a\xc0\x30\xc1\xd8\xe8\x6a\xf6\xf1\x3d\xa3\x0b\x00\x32\xd2\xa4\xae\xf8\x26\x8a\xb6\xb7\x20\xd6\x3b\x76\x7a\x1a\x08\xa1\xee\x10\x0f\xeb\x01\x5c\xab\x4d\xf8\xce\x7d\xd5\xe0\x21\xc5\xeb\x8e\xe8\xf0\x8c\x35\x49\xf4\xa6\x1c\xcf\xe2\xa7\xff\x03\x00\x00\xff\xff\x9f\x8b\xfe\x15\x75\x08\x00\x00")

func include_herokuish_bash() ([]byte, error) {
	return bindata_read(
		_include_herokuish_bash,
		"include/herokuish.bash",
	)
}

var _include_procfile_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x94\xdd\x4e\xe3\x3a\x10\xc7\xaf\x9b\xa7\x18\x45\x11\xb4\xe7\xe0\x06\x6e\x0f\xea\xd1\xae\xc4\x6a\xb9\x01\x56\xdc\xb2\xa8\x72\xe3\x69\x62\xd5\x89\xb3\xb6\xc3\xc7\xb2\xbc\xfb\xfa\x23\x69\x63\x1a\xae\x12\x8f\x67\xec\xdf\xfc\x67\x3c\x49\xab\x64\xb1\xe5\x02\x49\x4b\x95\xc6\xf9\x02\xde\x92\x19\xc3\x42\x50\x85\xc0\x50\x17\xab\xf4\x3b\x1a\x28\x64\x5d\xd3\x86\x81\x36\x8a\x37\x25\x6c\xa5\x02\x0a\x2e\x14\xb5\x06\xf3\xda\x22\x6c\x95\xac\xe1\x47\x7f\x58\x7a\x38\xc3\x6d\xae\xd2\xec\xc2\x9a\x0a\x6a\x20\xcd\x68\xdb\xae\x5b\x6a\xaa\x7c\xef\x0c\x7f\xe0\x95\xd6\x82\x94\xe8\xf6\x5d\x40\x9a\xbc\x27\x07\x32\x6d\xa8\x32\x53\x64\xf7\x5d\x13\x43\x0c\x98\x11\x0c\x98\x4a\xc9\xae\xac\x00\x5f\xb0\x98\x26\xdb\x5f\xe5\x5c\x20\x9b\xc7\xa2\x0c\x50\x8b\x88\xca\xb9\x7e\x06\x45\x35\x28\xcb\x21\xeb\x33\xe8\x9a\x56\xf1\x27\x1b\x50\x22\x83\x4e\xa3\x82\x67\x6e\x2a\xb8\x46\x25\x77\x1d\x11\x7c\x87\x80\xcd\xd3\x98\x21\x44\xf2\xdf\x48\x9c\xfb\x68\x43\xa3\x21\x95\xac\x71\x64\x12\x92\x32\x62\xe3\x3f\x9a\xec\xca\x2d\x92\x59\x74\x7d\xf6\x25\xca\xc0\x25\xa5\x43\x0a\x86\x1b\x2b\x54\x7a\xc5\x75\x21\x9f\xd0\xd7\x78\x2c\xac\xb6\x7c\x7c\x0b\x0f\x0f\x40\xb6\x56\x8d\x4d\xc7\x05\xfb\x58\xc4\xc7\xc7\x4b\xab\x34\x36\xc9\x6c\x26\x64\x41\x45\x08\xb4\x2b\xff\xb5\x42\xcf\x5d\xfd\xa7\x62\x87\xfa\xef\xf0\x55\xdb\xff\x17\xaa\x4a\x0d\x58\x54\x72\x61\xaf\x9d\xb9\x1f\x48\xf7\xbe\xbd\xd8\x3d\x17\x90\xff\x21\x7b\xf3\xbf\x79\x0e\xf9\x19\xbc\xbb\x10\x85\xa6\x53\x16\x64\xcb\xf7\xd8\x3a\xc6\x5e\x2a\x14\x48\xf5\x14\x36\xc3\x2d\xed\x84\x59\x0f\xf8\xd1\x7a\x2a\x8d\xe1\xac\x28\x8d\x21\xaa\x57\x31\x44\x1f\x27\x67\xd1\xd2\x2c\xba\xc1\x11\xc1\xc9\x09\xfc\xb4\xbb\x7d\xee\x57\x61\x3f\xae\x88\x7f\x83\x99\xb6\x57\x17\x06\xd9\xba\xa1\x35\x06\x31\xa2\xd3\x3e\x11\x25\x9c\x7b\x2b\x8f\x8e\xec\x1a\x16\xbf\xbd\xa1\xc1\x42\x9b\xf4\x62\x32\x0b\x6d\x6d\x3e\xfd\x48\x41\xc7\x84\xc0\x1b\xfb\x84\x84\x86\xbd\xcf\xe2\x12\x98\xf4\xf9\xbc\xb4\x52\xb9\x47\x8e\xab\x5e\xc7\xc1\x25\xcf\xd0\x0b\xc2\x64\x83\x9e\xf1\x08\xa2\x6f\xe9\x00\xa2\x2b\xd9\x1a\x57\xd5\xa6\x13\xa2\x14\x72\x93\xcc\xea\x1d\xe3\x0a\x48\x3b\x1e\x31\xcb\x3e\x68\x69\xb3\xf2\x70\xbe\x85\x1c\xdf\x84\x4b\xfe\xcf\x52\x57\x3d\xa9\x96\x9d\x2a\xdc\xc3\x1f\xa6\x99\xc7\xaa\xa8\xae\x80\xa8\x78\x38\xf5\x8f\x32\x70\xf5\x09\x5e\xdf\xdd\x7c\x5b\x1d\x38\xec\x01\xee\x29\xd7\x92\x01\xf1\xce\x23\xc6\xd4\xfe\x8f\x1f\xe9\xda\x79\xba\x61\x59\xc9\xe7\x06\xc8\xfd\xd4\xf6\x7f\xb1\xa9\xb4\xe3\xad\x4d\xc7\x67\x46\x84\xf1\x3c\x09\x9c\xa1\xd5\xdd\x9a\x33\xd7\xd3\xf3\xfb\xaf\xb7\x57\x77\x37\xff\x5e\x9c\x9f\x9f\x2f\x5c\x21\x0e\x0e\xae\xb3\x56\x69\x97\xbd\x05\x6f\xdb\x4b\xc9\x8c\x32\xe6\x2f\xb5\xe9\xfc\xea\xb8\x1d\xdb\x84\x94\xdc\x75\x45\xf0\x49\xfb\x3f\x17\x9a\x7a\x6f\x3f\xf8\x5c\x4b\x13\xa2\x2b\x14\x02\xf2\x0d\x6f\xf2\x8d\xd3\x33\x58\x19\xd7\x74\x23\xd0\x96\x99\x6a\xfd\x2c\x15\xeb\xed\xb6\x68\x05\x92\x0d\x65\xbe\xc1\x83\xad\x91\xa4\x50\x48\x0d\x06\x2d\x83\xb1\x8b\xee\x0f\xb6\x72\xca\x86\x85\xd4\x70\x7a\xda\x2f\x03\x7e\xf8\x3f\xaa\x8c\x33\x47\x99\xc4\xf3\xd4\xd7\x62\x15\x39\x1c\xd7\x25\xda\x7f\xff\x1b\x00\x00\xff\xff\x9d\x05\xaf\xe4\x6f\x07\x00\x00")

func include_procfile_bash() ([]byte, error) {
	return bindata_read(
		_include_procfile_bash,
		"include/procfile.bash",
	)
}

var _include_slug_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x41\x8b\xdb\x3c\x10\x3d\xc7\xbf\x62\x3e\x11\xd8\xe4\xa0\xe4\x4b\xaf\xc5\x85\x92\x96\xb2\x50\xda\xd2\x4d\xa0\xb0\x5d\x82\x56\x9e\xd8\x02\xd9\x12\x92\xdc\x66\xdd\xf6\xbf\x77\x64\x3b\x89\xdd\xdd\x24\xa7\x78\x34\xf3\xe6\xcd\x9b\x79\x89\x43\x91\x99\x4a\x3f\x81\xd7\x75\xbe\xb3\x22\x14\x29\x5b\x86\xd2\x2e\xe3\xf7\x22\xe4\x0d\x4b\x92\xf8\x97\xab\xd2\x1a\x17\x66\x73\xf8\x95\x4c\x32\x94\x5a\x38\x84\x0c\xbd\x4c\xd9\x6d\xfb\x02\x02\xf2\x46\x59\x8b\x59\x0b\x05\x41\xb8\x47\xa1\x35\xec\x9d\x29\x61\xfb\xf5\x23\x18\x07\x77\x9b\x77\xb7\x9f\x80\x9d\x01\x6a\xa7\x53\x36\x5d\x51\x44\xed\xe1\xfe\x1e\xd8\x74\xa6\x3d\xf0\xb7\x30\x15\xd6\xb6\x6c\xe6\x0c\x1e\x1e\x5e\x43\x28\xb0\x4a\x26\x13\x87\xa1\x76\x15\xac\x92\x09\xea\x63\x05\x61\x8c\x72\x24\x05\x80\x13\x8a\x81\x65\x86\x3f\x96\x55\x4d\x2c\x38\xa7\x52\xf7\x04\xaf\xa8\xc0\x3b\xc9\xe0\x77\x24\x08\xfc\xd0\xac\x29\x72\x6c\xc6\x22\xae\xc7\x08\x22\xc2\xc5\x94\xbd\x4a\xfe\xf4\xa2\xe4\x58\xa1\x13\x01\x5f\x92\xe5\x43\xff\x76\x55\x18\xe2\x0c\x44\xd8\x61\x45\x02\x5a\x4b\xe8\xda\x48\xa1\xc1\xaa\xbc\xd9\x19\x1b\x94\xa9\x5a\x6d\x7e\x16\x4a\x16\x6d\x14\xde\x9c\xc7\x3a\xcd\x3c\x48\x4f\x19\xe7\xb5\x47\x2e\x4d\x69\x1d\x7a\xcf\xad\x33\xb9\x13\x65\x1a\x73\x3a\xf6\x7d\x8f\xc8\x46\xe5\x95\x71\x38\xec\x44\x9a\xf2\x3d\x0d\xfc\x58\x2b\x9d\xb5\x23\x2f\x17\xe7\xcc\x91\xd2\xcf\x00\xa8\xf7\x37\xb8\x54\xd9\xb5\x8e\x92\x4e\x07\x74\x61\xfa\x0c\x05\xbe\x13\x36\xe7\x78\x90\xba\xce\x30\xbd\x59\xe4\x2a\xdc\x74\xc1\xf5\x88\x18\xeb\x82\x32\xd2\x3d\x9d\x6f\x0c\x02\xfd\x26\x8b\xe1\x9c\x3b\xaf\x1a\xa4\x53\x9b\x65\x35\xf0\xbb\x02\xce\xf9\xb4\x66\x59\x07\x9a\x79\x35\x27\x8a\x41\x05\x8d\xc0\xd6\x24\x9e\xd2\xc7\x8d\xc5\x5a\x50\xbe\x2f\x8a\x5f\xec\x74\x01\x78\xb8\x64\x8b\xf7\xed\x0b\x1c\x4f\xe4\x9f\xed\x07\xd3\x9a\x62\xf6\x65\xbb\x99\xf7\xd6\xf8\xbc\xdd\x5c\xb1\xc6\x7f\xdd\x5a\x06\x73\xbe\xe8\x8b\xa8\xf1\x75\x67\xfc\x7f\xc5\x1c\xb4\x3e\x22\x04\x7c\x33\xee\xd4\x41\x8d\xcc\x31\x7c\xef\x2c\xf1\x37\x00\x00\xff\xff\x93\x63\xfe\x2d\x4b\x04\x00\x00")

func include_slug_bash() ([]byte, error) {
	return bindata_read(
		_include_slug_bash,
		"include/slug.bash",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"include/buildpack.bash": include_buildpack_bash,
	"include/buildpacks.txt": include_buildpacks_txt,
	"include/cmd.bash": include_cmd_bash,
	"include/fn.bash": include_fn_bash,
	"include/herokuish.bash": include_herokuish_bash,
	"include/procfile.bash": include_procfile_bash,
	"include/slug.bash": include_slug_bash,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"include": &_bintree_t{nil, map[string]*_bintree_t{
		"buildpack.bash": &_bintree_t{include_buildpack_bash, map[string]*_bintree_t{
		}},
		"buildpacks.txt": &_bintree_t{include_buildpacks_txt, map[string]*_bintree_t{
		}},
		"cmd.bash": &_bintree_t{include_cmd_bash, map[string]*_bintree_t{
		}},
		"fn.bash": &_bintree_t{include_fn_bash, map[string]*_bintree_t{
		}},
		"herokuish.bash": &_bintree_t{include_herokuish_bash, map[string]*_bintree_t{
		}},
		"procfile.bash": &_bintree_t{include_procfile_bash, map[string]*_bintree_t{
		}},
		"slug.bash": &_bintree_t{include_slug_bash, map[string]*_bintree_t{
		}},
	}},
}}
