package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _include_buildpack_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x5f\x4f\xeb\xb8\x13\x7d\x4e\x3e\xc5\xfc\x42\xc5\x05\xa4\xd0\x1f\xf7\xee\x13\x97\xa2\x05\xca\xdd\xad\x16\x28\x0b\xed\x13\x8b\x2a\xd7\x99\x34\x16\x6e\x9c\xb5\x1d\x0a\x62\xf9\xee\x3b\x4e\xd3\xfc\xa1\xf4\xc2\xc3\x4a\xa0\x26\x1e\xcf\xcc\x39\xe3\x33\xe3\xf8\xd3\x5c\xc8\x28\x63\xfc\x21\x2c\x9e\x76\x76\xe1\xc5\xf7\x22\xe4\x92\x69\x84\x08\x0d\xef\x05\xa7\xce\x00\x2c\x05\x96\x65\x52\x70\x66\x85\x4a\x21\x37\x22\x9d\x81\x48\x8d\x65\x52\x62\x04\x55\x1c\x13\xf8\x1e\xa6\x26\xd7\x18\x66\xcc\x26\xc6\xf7\xea\x14\x06\x6d\x9e\xc1\x31\x74\x23\x7c\xec\xa6\xb9\x94\x4d\x23\x3e\x21\xcf\x2d\xc2\x3f\x14\x35\xc2\xd4\xfa\x5e\xa6\x15\x8f\x85\xc4\xd0\x3e\x67\x68\x6a\xc3\xab\xdf\x80\x5d\x42\x78\x0f\xf8\x60\x69\xaa\xb1\x41\xac\xd5\x1c\x7e\x13\x16\xc6\x37\x17\xc4\x28\x02\x95\x39\x36\x4c\x02\x57\xf3\xb9\xb0\x56\x98\x24\xa8\xc3\xe4\x5a\xf6\x82\xce\x41\x50\x5a\xe9\xf9\x6b\x00\x29\x9b\x23\x3d\x7d\x5b\xe3\x29\x62\xb8\xbb\x83\xff\x41\xd0\x21\xbf\x00\xee\xef\xbf\x83\x4d\x30\xf5\x3d\x8f\x19\x62\x1e\x52\xe5\x88\x01\x97\x79\x84\xdd\xba\x5c\xfb\xf6\xc9\x12\xb5\x45\x42\x44\x41\x23\x8b\x5c\xd6\x32\xe1\x77\x88\x14\xb9\x7b\x6b\x6c\x57\x39\x82\xce\x72\x23\x61\xf1\x22\x95\x22\xfd\x68\xaa\xb1\xa6\xa4\xb1\xf0\x3d\xa9\x38\x51\xb3\x4c\xcf\xd0\x4e\x1c\x4a\xc2\x5d\xc5\x2a\x16\xba\x9d\x17\xc7\xe7\x30\xec\xec\x4c\x99\x41\xf7\x0c\x2e\xf4\xee\x6b\xb0\x22\x54\xe5\x68\x32\x9a\x51\x0d\xb9\xa4\x8c\x35\x92\x46\x1a\x07\x87\x47\xeb\x6b\x85\x57\x82\xfc\x41\xe5\x16\xc2\xf0\xef\x5c\xa0\x6d\x71\x20\xa7\xb0\xad\x0f\x94\x06\x5b\xf9\xc2\x30\xc2\x8c\x98\x1c\x6c\xca\xec\x88\xeb\x39\x84\x3a\x6e\x9b\xba\xfb\x33\x97\xa4\x25\x1e\x29\x8c\x7d\x4f\x39\x17\xb4\xfe\x39\x71\x4b\x03\xa1\x83\xd2\x2e\xeb\x9b\x34\x85\xee\x97\x79\xb6\xe0\xb4\x52\x23\x3e\x65\xc8\x6d\xd1\x4f\x14\x89\xde\x94\xb6\x70\x72\x7d\x3d\xe9\x0f\x6e\xe8\xa4\xa8\xdd\x56\x9c\x4a\xdb\xef\xc3\xcb\xf3\x77\x0d\x37\xe7\x7f\x8e\xcf\x6f\x47\x93\x41\xbf\x17\x14\x69\xc3\xce\xcd\xc9\x55\x7f\x78\x59\x6f\xb9\x1d\x9d\x9c\xfd\xd1\x0b\x38\x46\x4c\x87\x07\xbf\x90\x81\x67\x54\x24\xa8\xc3\x75\xf7\x83\x15\x91\x55\x78\x87\xb7\xaf\x55\x96\x51\x11\x32\x2d\x1e\x49\xa3\x33\x24\xac\xb9\x41\x3d\x57\x74\x58\x61\xa2\x9c\x62\x1c\x30\x48\xd5\x54\x45\xcf\xcd\xe3\x83\xaf\xc7\xdb\x07\x94\x28\x51\x8b\x14\xc2\x9b\x72\xc7\x61\xaa\x66\x5a\xd1\x20\xf8\x8b\x0e\xb6\xc1\xa6\x7c\x6f\x00\x28\x57\x38\x23\xd1\xac\xef\x69\x54\xdb\xe1\x1c\x1b\x8c\x73\x09\x54\x6b\x4b\xa3\xc9\x40\x17\x62\x64\xd4\x0b\x58\xd7\xf6\x8c\xda\x7e\x72\x36\xbc\xba\x3a\x3f\x1b\x4d\x46\x83\xcb\xf3\xe1\x78\xd4\x0b\xbe\xfd\x7f\x19\xa0\x38\x18\x63\x31\x83\x29\x45\x5e\x30\x1d\x19\xd7\x87\x94\x41\x4c\x85\x14\xf6\x79\xd5\x11\x61\xdc\xaa\x1a\xa6\x8f\xad\xde\x30\x2a\xd7\x1c\xd7\xb6\x14\xca\x6c\xc9\xa2\x9c\x78\x4b\x61\x94\xa1\x53\xf2\x3b\x1d\x0f\x2e\xfa\xd7\x74\x5c\x13\xc2\xdb\x0a\x6d\x85\xa5\x29\x11\xfc\x40\xcb\x13\x37\x7f\x79\x6e\x2c\x4d\xb4\x2a\xa4\xeb\x21\x87\x00\x25\x09\x0b\xa3\x0d\x3d\xbf\xf4\x72\x7b\xab\x3e\x69\x79\xb8\x72\x78\x83\x1f\xb7\xbd\x2f\x5b\x5f\xde\x8e\x24\x38\x3a\x3a\x5a\x83\xe8\x7f\x66\x44\xad\xc0\x6e\x37\xfb\xbb\x09\xb6\x1c\xac\x3b\x79\x5a\x49\x2d\x82\x36\xb2\xee\x54\xa4\xe4\x6c\x69\x05\x1a\x42\xd9\x0d\xaa\x41\xb1\x05\xb1\x72\xd5\x4f\x50\xab\x87\x3c\xac\x61\xcd\x73\x69\x05\x58\x05\xa5\x7b\x2c\xb4\xeb\xf1\x98\xba\x90\x9a\x9d\x34\xe2\x4e\x80\xba\x79\xad\x5a\xef\x47\x0a\xd6\x74\x5e\x1d\xd2\x47\x8c\x3e\x15\x7f\x23\xd3\xa2\x03\x3c\x6f\x7b\x1b\x3e\x38\xe5\x0d\xb8\xc9\xdb\x4d\xc8\xc6\x6d\xd5\x3e\xfb\xa6\xdc\xca\x0b\xa4\x1e\x7f\xbd\x9d\xb7\x59\xf6\x76\xdd\x3e\xaa\x79\xe3\x96\x15\x4e\xc4\x2f\xb5\xd7\xdd\xaf\xf7\xaf\xc1\xea\x2e\xfb\x74\x75\x3e\xaa\xc0\x4f\x4b\xd0\xdc\x34\x25\x09\x3f\xb8\xb7\xf2\x86\x74\xf4\xdd\xff\xea\x7a\xdb\xcc\xbf\x6c\xb7\x4e\x0b\xb2\xfb\x0c\x2a\x45\x84\x51\x2d\xbc\x72\xef\x38\x65\x53\xfa\x25\x9d\x2d\x9d\x80\xb5\xbb\x93\xd4\x66\xe1\xa0\x00\xe0\x66\xce\x68\xd8\x1f\x1e\x82\xc5\xa5\x14\x6d\x22\x0c\xd0\x5f\x8a\x1c\x8d\x61\xfa\x19\xa8\xae\xb4\xbe\x40\xe0\xee\xfb\x4b\x2e\xd8\xb3\x81\x8c\x3e\x27\xa0\x43\x23\xa5\x00\x0c\x0b\x61\x13\x77\x9f\x0a\x63\x72\xac\x59\xed\xb8\x9b\xe9\xa4\xde\xb7\xdb\x62\xd6\xaa\x79\xf0\x4e\x93\xb9\xc1\x47\xe6\x37\x37\x02\xb4\x87\x71\x50\x45\xaf\xeb\xf0\x9f\x44\x5e\x1e\xd0\x87\xa1\x34\xad\xd0\x57\xcb\xcf\x41\x1e\xb7\xac\xdd\xfd\x95\x13\xd5\xdf\x24\xf4\xfd\x07\xa1\x21\x69\xda\x99\x54\x53\x70\xcd\xec\x1e\xaa\x2f\x88\x7a\x86\xef\xf9\xde\xfc\xb1\x29\xc4\xee\x5e\x6d\xad\x42\xe5\xeb\xa1\x5e\xfd\x7f\x03\x00\x00\xff\xff\x10\x52\xac\x0c\x65\x0b\x00\x00")

func include_buildpack_bash() ([]byte, error) {
	return bindata_read(
		_include_buildpack_bash,
		"include/buildpack.bash",
	)
}

var _include_buildpacks_txt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x90\x31\x92\x85\x20\x10\x44\x73\x4f\xe1\x05\x5c\x57\x70\xd5\xda\xdb\x0c\xc3\x28\x2a\x0a\x85\x40\x95\xb7\xff\x89\xf5\x25\x9d\x49\x88\xde\xeb\x6e\x4c\x8c\xfe\xfa\x6f\xdb\x65\x8d\x26\xa9\x1f\x74\x47\x6b\x28\xb8\x3d\x3d\x4f\xa3\xd2\x6a\xb5\x07\xdc\x1b\xb4\x6e\x4b\x81\xea\xe7\x14\x0a\x35\xeb\xa9\x62\x18\x16\x57\x97\xa7\xc4\xd0\x01\x28\x96\x21\x80\xb6\xdf\x0a\xf5\xd8\xcb\x79\x94\xc8\x31\x6c\x90\xa1\xe8\x90\x05\x6b\xc1\x91\x6c\x5c\x5f\x1a\xb5\x26\x94\x3d\xc7\x70\x3a\x4d\xdb\xf5\xe6\x0f\xbf\x1c\xda\x1b\x5f\xfe\x60\xee\x25\x8b\xb6\x70\x17\x34\x12\x69\x9a\x06\x96\xe1\x8e\xc6\x9d\x6f\xfe\x9f\xe0\xd0\x21\xa9\x32\x3f\x77\x62\xe4\xe0\x17\x82\x85\x72\x7c\x57\x7d\x02\x00\x00\xff\xff\x67\xc4\x1a\xde\xbf\x02\x00\x00")

func include_buildpacks_txt() ([]byte, error) {
	return bindata_read(
		_include_buildpacks_txt,
		"include/buildpacks.txt",
	)
}

var _include_cmd_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x54\x41\x6f\x9c\x3c\x10\x3d\xc3\xaf\x98\xcf\x71\xa2\xe4\x80\xf8\x58\xf5\x44\xb4\x55\xa2\xb6\xb7\xb6\x97\x1c\xc3\x46\x72\xc0\x04\x14\xaf\x59\x61\xd8\xa6\x22\xfc\xf7\xce\x18\x9b\x40\xb2\xbd\xf4\x04\x9e\x19\xcf\x7b\xf3\xfc\xec\xb0\x90\xb9\x12\xad\x84\xe8\x16\xbe\xfc\xf8\x7a\x17\x86\xf9\xbe\x88\x54\x6d\xba\xcb\x2b\x18\xc2\xc0\xa7\x0b\x69\xf2\x2d\xfb\x8e\x71\x03\xe2\x28\x6a\x25\x1e\x95\x84\xbc\xd9\xef\x85\x2e\x0c\x7b\x2b\xd4\x66\xcb\x78\x82\x01\xdf\x27\x7a\x96\xbf\x0d\x30\xae\x0d\x83\x57\x30\xb2\x00\x66\x62\x5c\xa5\x71\xcc\xc2\xf1\x0d\xcf\xd6\xad\x41\xe7\x5e\x65\xd3\xc2\x33\xd4\x1a\xdb\x0c\xff\x11\xcd\xfb\x9b\xdd\xc8\xae\xa1\x68\xc2\x20\x90\x79\xd5\x60\xe2\x99\x48\x34\x5a\x22\xc8\x53\x2b\x0f\xc0\x1e\x08\xc4\x62\x36\x6d\xb7\x42\xd2\x0e\xe7\x5f\xda\x46\x47\x48\xdf\xf5\x94\x2f\x07\x5c\x9d\xd2\xeb\x9b\xcd\xa0\x62\x50\xf6\x3a\xef\xea\x46\x83\xa0\x95\xd3\x6d\x21\x5b\xa9\xed\xa8\x98\xc6\xef\xb0\x49\x23\x9e\x8c\x98\x56\x4d\x2e\x94\xd5\xc1\xa9\xa0\x89\x2e\xbf\x5c\x8c\x72\xb5\xe6\x5b\x6a\xb6\x54\x20\x62\x70\xf1\x19\xe2\x42\x1e\x63\xdd\x2b\x05\x17\x17\x93\xaa\xda\x8d\x15\x06\x76\x6e\x3a\x9e\x94\x0f\xc2\xc4\x67\xf8\x17\xc5\x23\xdb\x6d\x6d\xaf\xf5\x8c\xb3\x72\xef\x4e\xc8\x8d\xcb\x37\xd8\x55\x1e\x91\x31\x06\xa9\x10\x90\xd7\x4a\x91\x8c\x71\xfa\x66\x58\x67\x0d\xa2\x0d\xf0\x04\x32\x96\xf1\x9b\x0c\x85\x0f\x83\xd1\x39\x67\xc2\x83\xe9\xf8\x1d\xc5\xc4\x92\x4a\x66\x4e\x9e\xcc\x9b\x48\x98\xbc\x06\x53\xd5\x65\x07\x3e\x8c\x85\xab\xf8\xeb\x2b\x74\x6d\x2f\x7d\xda\x74\xa2\xeb\xcd\xf6\xff\x30\xa8\x4b\xf0\xaa\xce\x6e\xb5\x32\x3e\x70\x8c\x67\x7c\xa5\xe3\x35\x74\x95\xd4\x38\x04\x1f\x16\xfa\x61\x1d\xdb\x8d\xb8\xfb\x86\x74\x50\x06\x51\xa8\xed\xfd\x3d\x86\x28\x07\xbb\xdd\xbc\xd1\x9d\xd7\xcf\x06\x4c\x9f\x57\xde\x11\x29\xd8\x42\xca\x3b\x66\x1b\x3a\x5a\xe5\xbb\x10\xad\x8f\x4d\xf8\x65\xa9\x23\xd2\x75\xaa\xb8\xa2\xfd\x65\xed\x3c\x31\x5b\xe3\xf6\xc3\xb5\x4d\x6d\x21\xba\x0a\x31\xd7\xbe\x72\x8d\x9c\xb5\x82\x43\x5b\xeb\xae\x04\x06\x70\x1e\x6d\x3e\x19\x38\x37\x19\xda\xcc\x0d\xb5\x82\xff\x28\xc7\x44\xc7\xc2\x98\xfe\xf1\x14\x12\xd5\xcd\x50\x0b\xac\xf7\x68\xd3\xf6\xbf\x00\x62\x26\xf5\x15\x33\xe8\xe4\x70\xff\xf1\x6a\xbc\xd4\x1d\xf0\x49\xde\x90\x74\x72\x76\xaa\xa4\x3a\x9c\xba\xc4\x77\x55\xf3\xcb\x00\x65\x91\x39\x8e\xb1\x17\xf6\x22\xd3\x40\xa7\x6e\xb2\x68\x9f\xc8\x89\x64\x01\x7f\x6a\x14\x5a\x9c\x1b\x4d\xe6\x65\xa7\xb1\xad\x21\xe9\x07\x5f\x99\x33\x50\x02\x45\xc1\x1d\x53\xd9\xc2\xdb\x03\xb5\x89\xcf\x69\xd2\x98\x5e\xa9\x29\xa8\x31\x04\xeb\x35\xc4\x11\x5e\xa3\xc5\x76\xfb\xb8\x9c\x38\x19\xc7\x44\x47\x34\x97\x7b\x3b\x92\xd9\xb9\xee\x7e\xda\x97\x87\x44\x5a\x5c\x4b\x2f\x97\x55\x25\xfc\x13\x00\x00\xff\xff\xd3\x23\x50\x2b\x44\x06\x00\x00")

func include_cmd_bash() ([]byte, error) {
	return bindata_read(
		_include_cmd_bash,
		"include/cmd.bash",
	)
}

var _include_fn_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x51\x41\x6e\xc2\x30\x10\x3c\xc7\xaf\x18\xad\x22\x01\xaa\xa2\x08\xae\x34\x3d\x56\xea\x1b\x28\x07\xcb\xac\x89\xd5\xd4\x89\x6c\x03\xaa\x28\x7f\xef\x1a\xd2\x92\x43\x55\x55\xb9\x64\x77\x66\x67\x76\xd6\xca\xfa\x4a\x87\x7d\x9c\x2f\x70\x56\xc5\x8e\x4d\xa7\x03\x63\xc7\xd1\x34\xf4\xe2\xe3\xc0\x26\x41\xc3\x1e\xbc\x49\xae\xf7\xb3\x08\x21\x1f\xde\xd9\xa7\x48\xaa\xe8\x7a\xa3\xbb\xdc\xe9\x9c\xe7\xa6\x9c\xa7\x8f\x81\x51\x2e\xf1\x89\x7d\xe0\x01\xdf\x6a\x63\x59\x1d\x41\x53\x03\x12\xa0\x65\xbd\x43\xb5\x5c\xa8\x82\x4d\xdb\xa3\x62\x50\x79\x1e\x05\xeb\x1a\x35\xbd\x7a\xba\x64\xa2\x3e\xbd\xa1\x7a\x6e\x30\xab\x9b\xfa\x3c\x04\xe7\x13\xe8\x91\xca\x25\x3d\xd1\x65\x26\x78\x0a\xc8\x5c\xc8\xa7\x2e\x2a\xa7\xca\x16\xff\x4e\x95\xa1\xe0\x86\x5c\x51\x1e\xc8\x44\xf9\xe1\xa3\xe4\xa3\x5f\x82\x45\x33\x59\x9e\xd6\xb8\x6e\x5f\xe6\xfe\xe8\xee\xbc\xed\xff\x70\x8f\x13\x7b\xba\x73\xac\x6f\x72\x26\xc4\xb6\x3f\xc5\xfe\x10\x0c\x4b\xbd\xa2\xf1\x3a\x54\x5a\x8f\x72\x3e\xbe\x18\xa4\x5a\xfc\x40\xb8\x01\xd7\xcd\x26\x80\x2a\x9c\xc5\x66\x23\xa3\x77\x49\xc2\x76\xbb\x46\x6a\xd9\xab\xa2\xb8\x25\x13\x5d\x39\xa1\x76\x1d\x2a\x8f\x87\x95\xf4\x6f\xc3\xd6\x49\x9c\xaf\x00\x00\x00\xff\xff\x5c\xaf\x12\xe0\x23\x02\x00\x00")

func include_fn_bash() ([]byte, error) {
	return bindata_read(
		_include_fn_bash,
		"include/fn.bash",
	)
}

var _include_herokuish_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x55\xef\x6f\xdb\x36\x10\xfd\x2c\xfd\x15\x57\xce\xad\x57\x03\x8a\xb1\xac\xd8\x87\x18\x1a\xe6\x64\xee\x52\xac\x4b\x8d\xa6\xed\x30\x24\x85\xc1\x88\x67\x99\x88\x44\x0a\x24\x95\x3a\x48\xf2\xbf\xef\xa8\x5f\x96\xec\xc4\x9f\xc4\x7b\xef\x8e\xc7\xc7\xc7\x73\x28\xd7\x70\x75\x05\x6c\x74\x3a\xbf\x3c\x5f\x7d\x5b\x7c\xbe\xfc\x70\xf1\xfe\x13\x83\x28\x73\xc0\xde\x31\xf8\xfe\x7d\x06\x6e\x83\x2a\x0c\x30\xd9\x68\x60\xaf\x5e\xc1\x7f\xba\x34\x60\xef\xad\xc3\x1c\x4e\xb9\xdd\x80\xb4\xa0\x4b\x07\x7a\x0d\x82\x3b\x3c\x81\x5e\xad\x4f\x17\xac\x97\xb9\xcc\x90\x5b\x84\xb2\x48\x0d\x17\x08\x4e\xd7\xf9\xef\x40\x1b\x48\x0d\x52\xb2\x39\xf2\xfc\xad\x74\x70\x1c\xae\x65\x18\x52\x50\x68\x95\xdd\x03\x2f\x8a\x55\xc1\xdd\x26\x66\xa3\x87\xf9\x72\xb9\x5a\xce\xbf\x9c\x9f\x44\x53\x0a\x3f\xb1\x1d\x0b\xd5\x5d\xc7\x5a\x5c\x7c\x6b\x59\x2e\x2f\xa6\x04\xf5\x99\x37\xa5\xcc\x44\xc7\x3d\xfd\xfa\xe1\xe3\x9f\x7d\x76\x05\xf7\xf9\x09\x4f\x36\xd8\xf1\xcf\xe6\x67\xe7\x8b\x3e\xbf\x82\x0f\xea\x17\x3c\xb9\x1d\xee\xb1\x9c\x9f\xfd\x7d\xb0\x8f\xa7\x59\x4a\xee\xed\x86\x82\x1b\x69\x37\xab\x3b\x34\x56\x6a\x15\xb3\xbb\x63\xc2\x05\x26\x19\x37\x24\xa0\x2a\x8c\xbc\x93\x19\xa6\x28\x56\xa5\x45\x13\x33\xa5\x6f\xb4\xb8\x67\xcf\x53\x52\xa3\xcb\xc2\x73\xaa\x0f\x2a\x84\xca\x96\x06\x23\xdf\x9a\xfd\xf9\x2d\x3c\x84\x41\x7e\x2b\xa4\x81\xa8\x80\xeb\x30\x08\xd8\xa8\x95\x9b\x35\xeb\x56\xd8\x76\xbd\x93\xaf\x8d\xec\x04\x1a\x70\x3a\x09\x58\xf8\x14\x86\xbd\x0d\xdb\x46\x05\xda\x24\x66\x97\x1b\xfd\xc3\x82\x87\xc1\xa2\x73\x52\xa5\x96\x8c\x40\x47\x50\x6e\x0d\xec\x75\xf4\xeb\xb1\x85\x9f\xe0\xb5\xbd\x56\x4d\xf5\xd6\x03\x71\xaf\x55\x1f\x2e\x8a\x4c\x26\xdc\x91\x66\x75\x35\x51\x52\x8d\x14\x4c\xa9\x9c\xcc\xb1\x49\x6e\xad\x11\xf7\xce\x45\xe1\xa5\x4f\x20\x53\xae\x49\x36\x0b\x6b\x32\xa5\xc0\xb5\x54\x3e\xff\xc6\xfb\x96\xc8\xd2\x68\x95\xa3\x72\x4d\xa1\x9d\x6f\xe2\x81\x24\x01\xfb\x57\x9b\x5b\x9f\x48\xaa\x62\xe2\xb4\xb9\x6f\x3b\xa9\x68\xb6\xc9\xdf\xf9\x28\x1e\x08\x48\x95\x5b\xf1\x6a\xe7\x41\xa6\xeb\x53\xf5\x37\xee\xcc\x14\xef\x6b\x0d\xdd\x59\xa4\xb2\x8e\x67\x19\x8a\x9d\x23\x6d\x75\x15\x8d\xb3\x5e\xba\x0c\x68\x70\xe0\x4a\x80\x2d\x8b\x42\x1b\x47\x45\xda\xa8\x54\x6b\xdd\xbd\xec\x0d\x1a\x7d\x5b\x92\x5d\x5b\x98\x46\xc0\x43\xf3\xfc\x4f\x22\x81\xfe\xe1\x35\xd4\x44\xe7\xd4\xa0\xbc\xc9\xb0\xf3\x38\x91\xf7\xed\xfe\x1c\x7d\xd7\xfe\x09\xc1\xdc\x92\x4d\x22\x92\x84\x3a\x49\xb2\x52\x60\xef\x25\x1d\xb9\xad\x83\x47\xf2\x91\x80\xb1\x9d\x1e\x4d\xea\xf6\xae\xa7\xd3\xe9\x98\xc2\x5b\x6e\x52\x72\x5a\xe3\x2c\x80\xd7\xd1\xf1\x6f\xb6\x76\x96\x97\xc5\x49\x97\x61\x2d\x4a\xd5\xc2\x68\x7c\x8d\x57\xbf\xfc\x15\xf9\xdf\xef\x63\x18\x4d\x3c\x49\x2a\x41\x1e\xa8\x59\x3f\x36\xe4\x16\xf0\x2f\x17\x32\xa9\x70\x06\x42\xd3\x05\xb5\x53\xd5\x87\x18\xc4\x31\x44\xd1\x84\x66\x29\x3c\x3e\xee\xc5\xe3\x78\xd2\x9b\xb1\xc1\x60\xd3\x71\x45\xa3\x28\x66\x16\xf7\x41\xa8\x7e\xe3\xb6\x16\xc1\x34\x2f\x03\x1a\x1f\xe8\x3b\xec\x3f\xff\xba\x4f\xd2\xab\x94\x22\x95\x82\x32\x0e\xe6\x07\x19\x66\xf4\x47\x75\xfe\x9c\x4b\xd5\x25\x40\x84\x1a\x0a\x59\xe0\x9a\xcb\x6c\x56\x77\xfe\xe5\xf3\xfc\x6c\xe1\xff\x17\xe0\xcd\x1b\xa8\x38\xdb\x30\x0c\x92\x5c\x44\xb8\xf5\x26\xa9\x9e\x9d\x1d\x44\x9a\x5b\x1d\xd0\x22\x65\x77\x57\x0a\xec\x2b\x3d\x2f\xef\xb4\xc6\xae\x03\xb3\xf6\x4b\x75\xf1\xa8\xfa\x7a\x01\x6b\xaa\xbc\x80\x66\xd2\xba\x83\x5e\x6c\x56\xa6\xc0\xfe\xe1\x8a\xa7\xe8\xff\x6c\xba\x29\xe2\x81\xbd\x26\x7c\x28\x92\xb9\xff\x3e\x8c\xa7\xa8\xd0\xd0\x3f\xd9\x21\x52\x7f\x1f\xec\x5c\x18\x9d\xf8\x89\x53\x8b\xb0\x6c\x56\xb6\x92\x83\xc6\x96\x6f\x06\xe8\x1d\xe4\xb4\xde\xeb\xa3\xcd\x8c\xe8\xb4\x7b\xad\x74\x10\x6e\x31\x79\x1e\x29\xb8\xf1\xae\x22\xd0\xcf\x36\x36\xba\x5c\x7c\x7c\xcf\xe8\x02\x80\xac\x34\xad\x2a\xbe\x0d\x82\xe1\x16\x95\x4b\x66\x33\x4f\xf0\x75\xfb\xb8\x5f\xf7\xe0\x4a\x6d\xc2\xf7\xee\xab\x02\x27\x14\xaf\x3a\xa2\xc3\xb3\xda\x79\x14\x46\xcb\x93\xf0\xe9\xff\x00\x00\x00\xff\xff\x84\x57\x01\x68\x8f\x08\x00\x00")

func include_herokuish_bash() ([]byte, error) {
	return bindata_read(
		_include_herokuish_bash,
		"include/herokuish.bash",
	)
}

var _include_procfile_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x95\xdd\x4f\xe3\x38\x10\xc0\x9f\x93\xbf\x62\x14\x45\xd0\xde\x61\x02\xf7\x78\xa8\xe8\x4e\xe2\x74\xbc\x00\x2b\x5e\x59\x54\xb9\xf1\x34\xb1\x9a\xc4\x59\xdb\x29\xb0\x2c\xff\xfb\xfa\x2b\x6d\x4c\xcb\x53\xe3\xf1\x7c\xfc\xe6\xc3\xd3\xb4\x97\xa2\x5c\xf3\x06\x49\x4f\xa5\xc2\xd9\x1c\xde\xd3\x84\x61\xd9\x50\x89\xc0\x50\x95\x8b\xec\x7f\xd4\x50\x8a\xb6\xa5\x1d\x03\xa5\x25\xef\x2a\x58\x0b\x09\x14\xac\x29\x2a\x05\xfa\xad\x47\x58\x4b\xd1\xc2\xb7\xe0\x2c\xdb\xfb\xb0\x97\x8b\x2c\xbf\x34\xa2\x92\x6a\xc8\x72\xda\xf7\xcb\x9e\xea\xba\xd8\x29\xc3\x2f\x78\xa3\x6d\x43\x2a\xb4\xf7\xd6\x20\x4b\x3f\xd2\x3d\x99\xd2\x54\xea\x63\x64\x8f\x43\x17\x43\x8c\x98\x11\x0c\xe8\x5a\x8a\xa1\xaa\x01\x5f\xb1\x3c\x4e\xb6\x0b\x65\x55\x0c\xc3\x2c\xae\xca\x48\x35\x8f\xb9\xac\xf2\x57\x58\x54\x81\x34\x24\xa2\x3d\x83\xa1\xeb\x25\xdf\x1a\x83\x0a\x19\x0c\x0a\x25\xbc\x70\x5d\xc3\x2d\x4a\xb1\x19\x48\xc3\x37\x08\xd8\x6d\x6d\x7d\xd8\xa4\x3c\x53\x2a\xef\x89\xff\x44\x62\xcd\x27\x17\x0a\x35\xa9\x45\x8b\x13\x51\x23\x28\x23\xc6\xdf\x67\x91\x39\xd9\x43\x9a\x44\x38\xc5\x8a\x77\xc5\x8a\xaa\x1a\x88\xcb\x1b\xb7\xb4\x01\x2c\x6b\x01\xf9\x3f\x9f\xb2\xb5\x15\x50\x3e\x5d\xcd\xb5\x29\x6b\x76\xc3\x55\x29\xb6\xe8\x26\x62\xda\x06\x65\xd8\xf9\x1a\x9e\x9e\x80\xac\x8f\x37\xfc\xf9\xf9\xca\x74\x05\xbb\x34\x49\x1a\x51\x9a\x90\xce\xcc\x9c\xdc\xaf\x69\xca\xcc\xce\xca\xa1\xe5\x38\x29\x1b\x7c\x53\xe6\xfb\x95\xca\x4a\x39\x5c\xc3\x9a\x24\x8e\x3b\xdb\xe9\x86\xa6\x04\x26\x20\xd7\x90\xbf\xbb\xcf\xa2\x80\xe2\x0c\x3e\xac\x89\x44\x3d\x48\x83\xb1\xe6\x3b\x64\x35\x45\x3e\x97\xd8\x20\x55\xc7\x90\x19\xae\xe9\xd0\xe8\xe5\x88\x1e\x9d\x0f\x53\x18\x3d\x45\x29\x8c\x36\xa1\x7a\xde\xf6\x30\x31\x83\x95\xe5\x91\x7f\xcb\x03\x27\x27\xf0\xdd\xdc\x86\xbc\x6f\xfc\x7d\xdc\x09\xf7\x52\x73\x65\x42\x97\x1a\xd9\xb2\xa3\x2d\xfa\x42\x44\xde\xbe\x28\x88\xf7\x7b\x2f\x0e\x5c\x0e\x1d\x8b\x67\x63\x1c\x3a\x3f\x1e\xa1\x90\x76\x9a\x8d\xcc\x4f\xf3\xb4\x7e\x96\x09\x81\x77\x90\xcf\x1a\x05\x3b\x9d\xf9\x15\x30\xe1\xf2\x79\xed\x85\xb4\xab\x00\x17\xa1\x8a\xa3\x4a\x91\xa3\x2b\x08\x13\x1d\x3a\xc6\x03\x88\x30\xe6\x1e\x44\xd5\xa2\xd7\xb6\xa3\xdd\xd0\x34\x55\x23\x56\x69\xd2\x6e\x18\x97\x40\xfa\xa8\xc9\xc1\xe8\xdc\x64\xe5\xe0\xdc\xf8\x58\xbe\x23\x2a\xc5\x1f\xe7\xaa\x0e\xa4\x4a\x0c\xb2\xb4\xdb\x61\xdc\x79\x0e\x2b\x44\x1d\x26\x51\x6b\xf7\xc2\x64\xbc\xd5\xc2\xdb\xf5\xa8\x21\xe7\xdb\x87\xbb\xff\x16\xd1\x12\xb0\x2f\xbe\x15\x0c\x88\x53\x9e\x2e\x08\xf3\x3d\x7d\xcb\x4b\xab\x99\xc1\x35\x14\x0c\xb7\x85\x8d\x0d\x7f\x5d\x9f\x5c\x9a\xb5\x52\x8b\x97\x0e\xc8\xe3\x31\xfd\xbf\x63\x51\x65\x16\x65\x9f\x45\x5b\x68\x8a\x1c\xef\x21\x0f\xee\x1f\x83\x3d\x73\x66\xa7\x7e\xf6\xf8\xef\xfd\xcd\xc3\xdd\x9f\x97\x17\x17\x17\x73\xdb\xac\xbd\x82\x9d\xbe\x45\x36\xe4\xef\x5e\xdb\xcc\x5b\x9a\x50\xc6\x5c\x50\x93\xdf\x8f\x81\x9b\x3f\x00\x42\x2a\x6e\x27\xc7\xeb\x64\xe1\xcb\x9a\x66\x4e\xdb\x2d\x50\x3b\xf6\x84\xa8\x1a\x4d\x92\xfb\x15\xe6\xa5\x8c\x2b\xba\x6a\xd0\x8c\x02\x55\xea\x45\x48\x16\xe4\xa6\xb1\x25\x92\x15\x65\xee\x11\x78\x59\x27\x48\x29\x91\x6a\xf4\xc5\xf5\xc2\x21\x8a\xef\x65\xd5\x31\x19\x96\x42\xc1\xe9\x69\x38\x7a\x7c\xff\x7d\xd0\x2a\x2b\x8e\x32\x89\xf7\xb0\xeb\xc5\x22\x52\x38\xec\x4b\x74\xff\xf1\x3b\x00\x00\xff\xff\x86\xee\xe1\xff\xb9\x07\x00\x00")

func include_procfile_bash() ([]byte, error) {
	return bindata_read(
		_include_procfile_bash,
		"include/procfile.bash",
	)
}

var _include_slug_bash = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x53\x4d\x8f\xd3\x30\x10\x3d\x27\xbf\x62\xb0\x22\x6d\x7b\x70\x43\xb9\xa2\x20\xa1\x05\xa1\x95\x10\x20\xb6\x95\x90\x96\x55\x65\x92\x69\x62\xc9\x89\x2d\xc7\x81\x6e\x80\xff\xce\x38\x1f\x6d\xc2\xf6\xe3\xd4\x8c\x67\xde\xbc\x79\x33\x2f\xb4\x28\x32\x5d\xa9\x27\xa8\x55\x93\xef\x8c\x70\x45\xc2\x62\x57\x9a\xd8\x7f\xaf\x5c\xde\xb2\x30\xf4\x7f\xb9\x2c\x8d\xb6\x6e\xb1\x84\xdf\x61\x90\x61\xaa\x84\x45\xc8\xb0\x4e\x13\x76\xd7\xbd\x80\x80\xbc\x95\xc6\x60\xd6\x41\x81\x13\xf6\x87\x50\x0a\xf6\x56\x97\xb0\xfd\xfa\x11\xb4\x85\xfb\xcd\xbb\xbb\x4f\xc0\x4e\x00\x8d\x55\x09\x8b\xd6\x14\x91\x7b\x78\x78\x00\x16\x2d\x54\x0d\xfc\x2d\x44\xc2\x98\x8e\xcd\x92\xc1\xe3\xe3\x6b\x70\x05\x56\x61\x10\x58\x74\x8d\xad\x60\x1d\x06\xa8\xc6\x0a\xc2\x98\xe5\xa4\x14\x00\x4e\x28\x9c\xb2\xed\x13\xbc\x1a\x73\xfe\x78\x4e\xc0\x0f\xed\x2d\x45\x46\x7c\xe6\xa1\x6a\xf4\x75\xc2\x5d\x4c\xd9\xcb\xf0\xef\xa0\x43\x8e\x15\x5a\xe1\xf0\x9c\x12\x1f\x86\xb7\xab\x5a\x10\x4d\x20\x8e\x16\x2b\xd2\xcc\x18\x42\x57\x3a\x15\x0a\x8c\xcc\xdb\x9d\x36\x4e\xea\xaa\x93\xe3\x57\x21\xd3\xa2\x8b\xc2\x1b\x88\x33\xfc\x19\x57\x8d\x52\xc7\x31\x27\xe9\x09\xe3\xbc\xa9\x91\xa7\xba\x34\x16\xeb\x9a\x1b\xab\x73\x2b\xca\xc4\xe7\xf4\xec\x87\x1e\x9e\x8d\xcc\x2b\x6d\x71\xda\x89\x64\xe4\xfb\xc9\xc0\xf1\xea\x94\x37\x93\xf6\x59\x39\x75\xfe\x06\xe7\xeb\xfa\xb6\x5e\xce\x68\x42\x15\xa2\x67\x18\xf0\x9d\x90\x39\xc7\x43\xaa\x9a\x0c\x93\x9b\x55\x2e\xdd\x4d\x1f\x9c\x6d\xa1\x0f\xa5\x9e\xe8\xf1\x56\x7d\x10\xe8\x17\xac\xa6\x13\xee\x6a\xd9\x22\xdd\xd5\x22\x6b\x80\xdf\x17\x70\xca\xa7\x05\xa7\x8d\xa3\x69\xd7\x4b\x22\xe8\xa4\x53\x08\xec\x96\x64\x93\x6a\xdc\x95\xaf\x05\x59\x0f\x45\xfe\x8b\x1d\x77\x8f\x87\x4b\x1e\x78\xdf\xbd\xc0\x78\x1c\xff\xed\xdd\xe9\xce\x01\x8b\x2f\xdb\xcd\x72\xf0\xc1\xe7\xed\xe6\x8a\x0f\x5e\xf4\x0b\x99\xcc\x79\xd6\x04\x5e\xe1\xeb\x36\x78\xd9\x39\x41\x9f\xee\x67\x62\x0b\x5a\x1d\x11\x02\xbe\x99\x77\xea\xa1\x66\xb6\x98\xbe\xf7\x66\xf8\x17\x00\x00\xff\xff\x10\x50\x76\x66\x38\x04\x00\x00")

func include_slug_bash() ([]byte, error) {
	return bindata_read(
		_include_slug_bash,
		"include/slug.bash",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"include/buildpack.bash": include_buildpack_bash,
	"include/buildpacks.txt": include_buildpacks_txt,
	"include/cmd.bash": include_cmd_bash,
	"include/fn.bash": include_fn_bash,
	"include/herokuish.bash": include_herokuish_bash,
	"include/procfile.bash": include_procfile_bash,
	"include/slug.bash": include_slug_bash,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"include": &_bintree_t{nil, map[string]*_bintree_t{
		"buildpack.bash": &_bintree_t{include_buildpack_bash, map[string]*_bintree_t{
		}},
		"buildpacks.txt": &_bintree_t{include_buildpacks_txt, map[string]*_bintree_t{
		}},
		"cmd.bash": &_bintree_t{include_cmd_bash, map[string]*_bintree_t{
		}},
		"fn.bash": &_bintree_t{include_fn_bash, map[string]*_bintree_t{
		}},
		"herokuish.bash": &_bintree_t{include_herokuish_bash, map[string]*_bintree_t{
		}},
		"procfile.bash": &_bintree_t{include_procfile_bash, map[string]*_bintree_t{
		}},
		"slug.bash": &_bintree_t{include_slug_bash, map[string]*_bintree_t{
		}},
	}},
}}
