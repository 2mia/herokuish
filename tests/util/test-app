#!/bin/bash

readonly cedarish_version="v2"
readonly cedarish_image="progrium/cedarish:$cedarish_version"
readonly herokuish_root="$(dirname $(dirname $(dirname $PWD/${BASH_SOURCE/\.\//})))"

check-cedarish() {
	docker images | grep progrium/cedarish | grep $cedarish_version > /dev/null
}

download-cedarish() {
	docker import \
		"https://github.com/progrium/cedarish/releases/download/$cedarish_version/cedarish-cedar14_$cedarish_version.tar.gz" \
		"$cedarish_image"
}

check-buildpacks() {
	[[ "$(docker ps -qaf name=herokuish-buildpacks)" ]]
}

download-buildpacks() {
	docker run --name herokuish-buildpacks -v /tmp/buildpacks -v "$herokuish_root:/mnt" "$cedarish_image" /mnt/build/linux/herokuish buildpack install
}

main() {
	declare app_abspath="$1" expected_output="$2"
	set -eo pipefail
	check-cedarish || download-cedarish
	check-buildpacks || download-buildpacks
	docker run --rm -v "$app_abspath:/tmp/app" --volumes-from herokuish-buildpacks "$cedarish_image" bash -c "\
		rm -rf /app && cp -r /tmp/app /app
		/mnt/build/linux/herokuish buildpack build
		PORT=5678 /mnt/build/linux/herokuish procfile start web &
		sleep 1
		output=\"\$(curl --retry 5 -s localhost:5678)\"
		sleep 1
		echo \"\$output\"
		[[ \"\$output\" == \"$expected_output\" ]]"
}

main "$@"
